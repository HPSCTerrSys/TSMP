--- SoilHydrologyMod.F90	2007-04-26 20:50:19.000000000 +0200
+++ SoilHydrologyMod.F90	2019-12-04 12:52:05.695696000 +0100
@@ -165,10 +165,13 @@
        v         = -bsw(c,1)*sucsat(c,1)/(0.5_r8*dz(c,1)*1000._r8)
        qinmax    = (1._r8+v*(su-1._r8))*hksat(c,1)
 
+#if defined COUP_OAS_PFL
+       qflx_surf(c) = 0._r8
+#else
        ! Surface runoff
        qflx_surf(c) =  fcov(c) * qflx_top_soil(c) + &
                        (1._r8-fcov(c)) * max(0._r8, qflx_top_soil(c)-qinmax)
-
+#endif
     end do
 
   end subroutine SurfaceRunoff
@@ -684,6 +687,9 @@
     real(r8), pointer :: wa(:)             !water in the unconfined aquifer (mm)
     real(r8), pointer :: wt(:)             !total water storage (unsaturated soil water + groundwater) (mm)
     real(r8), pointer :: qcharge(:)        !aquifer recharge rate (mm/s)
+#if (defined CATCHMENT)
+    real(r8), pointer :: wtfact(:)         !Topographic Index
+#endif
 !
 ! local pointers to original implicit inout arguments
 !
@@ -752,7 +758,9 @@
     eflx_impsoil  => clm3%g%l%c%cef%eflx_impsoil
     h2osoi_liq    => clm3%g%l%c%cws%h2osoi_liq
     h2osoi_ice    => clm3%g%l%c%cws%h2osoi_ice
-
+#if (defined CATCHMENT)
+    wtfact        => clm3%g%l%c%cps%wtfact
+#endif
     ! Get time step
 
     dtime = get_step_size()
@@ -783,7 +791,7 @@
 
     ! The layer index of the first unsaturated layer, i.e., the layer right above
     ! the water table
-
+#if ! defined COUP_OAS_PFL
 !dir$ concurrent
 !cdir nodep
     do fc = 1, num_soilc
@@ -810,7 +818,16 @@
           icefracsum = icefracsum + icefrac(c,j) * dzmm(c,j)
        end do
        fracice_rsub(c) = max(0._r8,exp(-3._r8*(1._r8-(icefracsum/dzsum)))- exp(-3._r8))
+!CPS Adding saturation lateral runoff induced by topographic control for high resolution runs
+!CPS Sivapalan et al. 1987, Rsb = alpha*Ksat(0)*exp(-lambda)*exp(-f*zwt),
+!CPS Anisotropy set to 1, no macropore assumption Ksat(0)=Ksat*exp(f*dc),independent of surface soil type
+!CPS we increase the default value of fff(c) 
+#if (defined CATCHMENT)
+       ! CPS Lawrence et al. 2011
+       rsub_top(c)    = (1._r8 - fracice_rsub(c)) * 5.5e-3_r8 * exp(-fff(c)*zwt(c)
+#else
        rsub_top(c)    = (1._r8 - fracice_rsub(c)) * 4.5e-4_r8 * exp(-fff(c)*zwt(c))
+#endif
     end do
 
     rous = 0.2_r8
@@ -944,14 +961,19 @@
        wa(c) = wa(c) - xs(c)
        wt(c) = wt(c) - xs(c)
     end do
-
+#endif
 !dir$ concurrent
 !cdir nodep
     do fc = 1, num_soilc
        c = filter_soilc(fc)
 
        ! Sub-surface runoff and drainage
+#if defined COUP_OAS_PFL
 
+       qflx_drain(c)   = 0._r8 
+       qflx_qrgwl(c)   = 0._r8 
+       eflx_impsoil(c) = 0._r8
+#else
        qflx_drain(c) = rsub_sat(c) + rsub_top(c)
 
        ! Set imbalance for snow capping
@@ -961,7 +983,7 @@
        ! Implicit evaporation term is now zero
 
        eflx_impsoil(c) = 0._r8
-
+#endif
        ! Renew the ice and liquid mass due to condensation
 
        if (snl(c)+1 >= 1) then
