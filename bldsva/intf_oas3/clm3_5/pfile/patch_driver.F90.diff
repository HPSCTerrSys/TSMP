--- driver.F90	2007-04-24 23:49:05.000000000 +0200
+++ driver.F90	2019-12-04 12:52:05.725649000 +0100
@@ -91,6 +91,9 @@
   use shr_kind_mod        , only : r8 => shr_kind_r8
   use clmtype
   use clm_varctl          , only : wrtdia, fpftdyn, fndepdyn
+#if defined COUP_OAS_PFL
+  use clm_varpar          , only : nlevsoi
+#endif
   use spmdMod             , only : masterproc
   use decompMod           , only : get_proc_clumps, get_clump_bounds
   use filterMod           , only : filter, setFilters
@@ -196,11 +199,26 @@
   integer  :: begl, endl    ! clump beginning and ending landunit indices
   integer  :: begg, endg    ! clump beginning and ending gridcell indices
   type(column_type)  , pointer :: cptr    ! pointer to column derived subtype
+
+#if defined COUP_OAS_PFL
+  integer :: j,fc,cc                                  ! indices
+  real(r8), pointer :: qflx_infl(:)                   ! infiltration
+  real(r8), pointer :: pfl_flx_tran_veg_col(:,:)      ! transpiration fluxes at the column level
+  real(r8), pointer :: pfl_flx_total_col(:,:)         ! total flux at column level
+#endif
 !-----------------------------------------------------------------------
   ! Set pointers into derived type
 
   cptr => clm3%g%l%c
 
+#if defined COUP_OAS_PFL
+  pfl_flx_tran_veg_col  => clm3%g%l%c%cwf%pwf_a%pfl_flx_tran_veg
+
+  qflx_infl             => clm3%g%l%c%cwf%qflx_infl
+
+  pfl_flx_total_col     => clm3%g%l%c%cwf%pfl_flx_total
+#endif
+
 #if (defined DGVM)
    ! no call
 #elif (defined CN)
@@ -314,7 +332,6 @@
      ! of foliage that is dry and transpiring. Initialize snow layer if the
      ! snow accumulation exceeds 10 mm.
      ! ============================================================================
-
      call t_startf('drvinit')
      call DriverInit(begc, endc, begp, endp, &
           filter(nc)%num_nolakec, filter(nc)%nolakec, filter(nc)%num_lakec, filter(nc)%lakec)
@@ -434,6 +451,21 @@
                      filter(nc)%num_nosnowc, filter(nc)%nosnowc)
      call t_stopf('hydro2')
 
+#if defined COUP_OAS_PFL
+    !CMS  We calculate here the source/sink term for ParFlow
+   DO j = 1, nlevsoi
+    DO fc = 1, filter(nc)%num_soilc 
+       cc = filter(nc)%soilc(fc)                   
+     IF (j == 1) THEN
+       pfl_flx_total_col(cc,j) =   qflx_infl(cc) - pfl_flx_tran_veg_col(cc,j)
+     ELSE 
+       pfl_flx_total_col(cc,j) = - pfl_flx_tran_veg_col(cc,j)
+     END IF
+    END DO
+   END DO
+    !
+#endif
+
      ! ============================================================================
      ! Lake hydrology
      ! ============================================================================
@@ -502,7 +534,6 @@
      ! ============================================================================
      ! Check the energy and water balance, also carbon and nitrogen balance
      ! ============================================================================
-
      call t_startf('balchk')
      call BalanceCheck(begp, endp, begc, endc)
      call t_stopf('balchk')
