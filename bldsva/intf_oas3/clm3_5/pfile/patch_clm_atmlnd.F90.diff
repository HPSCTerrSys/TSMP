--- clm_atmlnd.F90	2007-02-28 06:46:27.000000000 +0100
+++ clm_atmlnd.F90	2019-12-04 12:52:05.714437000 +0100
@@ -77,6 +77,19 @@
   real(r8), pointer :: qflx_evap_tot(:)!qflx_evap(_soi + _veg) + qflx_tran_veg
   real(r8), pointer :: fsa(:)          !solar rad absorbed (total) (W/m**2)
   real(r8), pointer :: nee(:)          !net CO2 flux (kg C/m**2/s) [+ to atm]
+
+#if (defined COUP_OAS_COS)
+!MU (11.04.13) 
+  real(r8), pointer :: fpsn(:)         !photosynthesis rate (gross CO2 flux) (umol C/m**2/s)
+  real(r8), pointer :: fplres(:)       !plant respiration rate (umol C/m**2/s)
+!MU (11.04.13)
+  real(r8), pointer :: ram1(:)         !aerodynamical resistance (s/m) !CPS momentum
+  real(r8), pointer :: rah1(:)         !aerodynamical resistance (s/m) !CPS heat 
+  real(r8), pointer :: raw1(:)         !aerodynamical resistance (s/m) !CPS moisture
+  real(r8), pointer :: t_sf(:)         !surface temperature(K) !CPS t_sf=t_grnd for bare soil
+  real(r8), pointer :: q_sf(:)         !surface sp. humidity (kg/kg) !CPS q_sf=qg for bare soil
+#endif
+
 #if (defined DUST || defined  PROGSSLT )
   real(r8), pointer :: ram1(:)         !aerodynamical resistance (s/m)
   real(r8), pointer :: fv(:)           !friction velocity (m/s) (for dust model)
@@ -240,6 +253,19 @@
   allocate(l2a%qflx_evap_tot(beg:end))
   allocate(l2a%fsa(beg:end))
   allocate(l2a%nee(beg:end))
+
+#if (defined COUP_OAS_COS)
+!MU (11.04.13)
+  allocate(l2a%fpsn(beg:end))
+  allocate(l2a%fplres(beg:end))
+!MU (11.04.13)
+  allocate(l2a%ram1(beg:end))     !CPS
+  allocate(l2a%rah1(beg:end))     !CPS
+  allocate(l2a%raw1(beg:end))     !CPS
+  allocate(l2a%t_sf(beg:end))     !CPS
+  allocate(l2a%q_sf(beg:end))     !CPS
+#endif
+
 #if (defined DUST || defined  PROGSSLT )
   allocate(l2a%ram1(beg:end))
   allocate(l2a%fv(beg:end))
@@ -265,6 +291,19 @@
   l2a%qflx_evap_tot(beg:end) = ival
   l2a%fsa(beg:end) = ival
   l2a%nee(beg:end) = ival
+
+#if (defined COUP_OAS_COS)
+!MU (11.04.13) 
+  l2a%fpsn(beg:end) = ival
+  l2a%fplres(beg:end) = ival
+!MU (11.04.13)
+  l2a%ram1(beg:end) = ival   !CPS
+  l2a%rah1(beg:end) = ival   !CPS
+  l2a%raw1(beg:end) = ival   !CPS
+  l2a%t_sf(beg:end) = ival   !CPS
+  l2a%q_sf(beg:end) = ival   !CPS
+#endif
+
 #if (defined DUST || defined  PROGSSLT )
   l2a%ram1(beg:end) = ival
   l2a%fv(beg:end) = ival
@@ -495,9 +534,10 @@
     tbot_l = a2l_dst%forc_t(nd)  
 
     qbot_l = qbot_l - (qsum(ns) - qbot_a)        ! normalize
-    egcm_l = qbot_l*pbot_l/(0.622+0.378*qbot_l)
-    rhos_l = (pbot_l-0.378*egcm_l) / (rair*tbot_l)
-
+!CPS    egcm_l = qbot_l*pbot_l/(0.622+0.378*qbot_l)
+!CPS    rhos_l = (pbot_l-0.378*egcm_l) / (rair*tbot_l)
+    egcm_l = qbot_l*pbot_l/(0.622_r8+0.378_r8*qbot_l)
+    rhos_l = (pbot_l-0.378_r8*egcm_l) / (rair*tbot_l)
     a2l_dst%forc_q(nd)    = qbot_l
     a2l_dst%forc_rho(nd)  = rhos_l
 
@@ -600,6 +640,13 @@
 
   nflds = 12+2*numrad
 
+#if (defined COUP_OAS_COS || defined COUP_OAS_PFL) 
+  ! add on ram1,rah1,raw1,t_sf,q_sf fpsn, fplres
+!MU (11.04.13)
+  nflds = nflds + 7
+!MU (11.04.13) 
+#endif
+
 #if (defined DUST || defined  PROGSSLT )  
   ! add on fv, ram1 
   nflds = nflds + 2 
@@ -626,7 +673,20 @@
   ix=ix+1; asrc(:,ix) = l2a_src%eflx_lwrad_out(:)  
   ix=ix+1; asrc(:,ix) = l2a_src%qflx_evap_tot(:)  
   ix=ix+1; asrc(:,ix) = l2a_src%fsa(:)  
-  ix=ix+1; asrc(:,ix) = l2a_src%nee(:)  
+  ix=ix+1; asrc(:,ix) = l2a_src%nee(:)
+
+#if (defined COUP_OAS_COS)
+!MU (11.04.13)
+  ix=ix+1; asrc(:,ix) = l2a_src%fpsn(:)
+  ix=ix+1; asrc(:,ix) = l2a_src%fplres(:)
+!MU (11.04.13)
+  ix=ix+1; asrc(:,ix) = l2a_src%ram1(:)   !CPS
+  ix=ix+1; asrc(:,ix) = l2a_src%rah1(:)   !CPS
+  ix=ix+1; asrc(:,ix) = l2a_src%raw1(:)   !CPS
+  ix=ix+1; asrc(:,ix) = l2a_src%t_sf(:)   !CPS
+  ix=ix+1; asrc(:,ix) = l2a_src%q_sf(:)   !CPS
+#endif
+
   do n = 1,numrad
      ix=ix+1; asrc(:,ix) = l2a_src%albd(:,n)  
      ix=ix+1; asrc(:,ix) = l2a_src%albi(:,n)  
@@ -656,6 +716,19 @@
   ix=ix+1; l2a_dst%qflx_evap_tot(:)  = adst(:,ix)
   ix=ix+1; l2a_dst%fsa(:)            = adst(:,ix)
   ix=ix+1; l2a_dst%nee(:)            = adst(:,ix)
+
+#if (defined COUP_OAS_COS)
+!MU (11.04.13) 
+  ix=ix+1; l2a_dst%fpsn(:)           = adst(:,ix)
+  ix=ix+1; l2a_dst%fplres(:)         = adst(:,ix)
+!MU (11.04.13)
+  ix=ix+1; l2a_dst%ram1(:)           = adst(:,ix)   !CPS
+  ix=ix+1; l2a_dst%rah1(:)           = adst(:,ix)   !CPS
+  ix=ix+1; l2a_dst%raw1(:)           = adst(:,ix)   !CPS
+  ix=ix+1; l2a_dst%t_sf(:)           = adst(:,ix)   !CPS
+  ix=ix+1; l2a_dst%q_sf(:)           = adst(:,ix)   !CPS
+#endif
+
   do n = 1,numrad
      ix=ix+1; l2a_dst%albd(:,n)      = adst(:,ix)
      ix=ix+1; l2a_dst%albi(:,n)      = adst(:,ix)
@@ -826,6 +899,33 @@
      call p2g(begp, endp, begc, endc, begl, endl, begg, endg, &
           pptr%pef%eflx_lwrad_out, clm_l2a%eflx_lwrad_out, &
           p2c_scale_type='unity', c2l_scale_type= 'unity', l2g_scale_type='unity')
+
+#if (defined COUP_OAS_COS)
+!MU (11.04.13)
+     call p2g(begp, endp, begc, endc, begl, endl, begg, endg, &
+          pptr%pcf%fpsn, clm_l2a%fpsn, &
+          p2c_scale_type='unity', c2l_scale_type= 'unity', l2g_scale_type='unity')
+
+     call p2g(begp, endp, begc, endc, begl, endl, begg, endg, &
+          pptr%pcf%fplres, clm_l2a%fplres, &
+          p2c_scale_type='unity', c2l_scale_type= 'unity', l2g_scale_type='unity')
+!MU (11.04.13)
+     call p2g(begp, endp, begc, endc, begl, endl, begg, endg, &
+           pptr%pps%ram1, clm_l2a%ram1, &
+           p2c_scale_type='unity', c2l_scale_type= 'unity', l2g_scale_type='unity')  !CPS
+     call p2g(begp, endp, begc, endc, begl, endl, begg, endg, &
+           pptr%pps%rah1, clm_l2a%rah1, &
+           p2c_scale_type='unity', c2l_scale_type= 'unity', l2g_scale_type='unity')  !CPS
+     call p2g(begp, endp, begc, endc, begl, endl, begg, endg, &
+           pptr%pps%raw1, clm_l2a%raw1, &
+           p2c_scale_type='unity', c2l_scale_type= 'unity', l2g_scale_type='unity')  !CPS
+     call p2g(begp, endp, begc, endc, begl, endl, begg, endg, &
+           pptr%pes%t_sf, clm_l2a%t_sf, &
+           p2c_scale_type='unity', c2l_scale_type= 'unity', l2g_scale_type='unity')  !CPS
+     call p2g(begp, endp, begc, endc, begl, endl, begg, endg, &
+           pptr%pes%q_sf, clm_l2a%q_sf, &
+           p2c_scale_type='unity', c2l_scale_type= 'unity', l2g_scale_type='unity')  !CPS
+#endif
                   
 #if (defined CN)
      call c2g(begc, endc, begl, endl, begg, endg, &
