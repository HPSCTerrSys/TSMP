--- CanopyFluxesMod.F90	2007-04-26 20:50:19.000000000 +0200
+++ CanopyFluxesMod.F90	2019-12-04 12:52:05.687217000 +0100
@@ -175,6 +175,10 @@
    real(r8), pointer :: h2ocan(:)      ! canopy water (mm H2O)
    real(r8), pointer :: cisun(:)       !sunlit intracellular CO2 (Pa)
    real(r8), pointer :: cisha(:)       !shaded intracellular CO2 (Pa)
+#ifdef COUP_OAS_COS
+   real(r8), pointer :: t_sf(:)        !surface temperature (Kelvin) !CPS
+   real(r8), pointer :: q_sf(:)        !surface humidity (kg/kg)     !CPS
+#endif
 !
 ! local pointers to implicit out arguments
 !
@@ -182,6 +186,10 @@
    real(r8), pointer :: dlrad(:)           ! downward longwave radiation below the canopy [W/m2]
    real(r8), pointer :: ulrad(:)           ! upward longwave radiation above the canopy [W/m2]
    real(r8), pointer :: ram1(:)            ! aerodynamical resistance (s/m)
+#ifdef COUP_OAS_COS
+   real(r8), pointer :: rah1(:)            ! aerodynamical resistance (s/m) !CPS
+   real(r8), pointer :: raw1(:)            ! aerodynamical resistance (s/m) !CPS
+#endif
    real(r8), pointer :: btran(:)           ! transpiration wetness factor (0 to 1)
    real(r8), pointer :: rssun(:)           ! sunlit stomatal resistance (s/m)
    real(r8), pointer :: rssha(:)           ! shaded stomatal resistance (s/m)
@@ -200,6 +208,10 @@
    real(r8), pointer :: alphapsnsha(:)     !fractionation factor in shaded canopy psn flux
    
    real(r8), pointer :: qflx_tran_veg(:)   ! vegetation transpiration (mm H2O/s) (+ = to atm)
+#if defined COUP_OAS_PFL
+   real(r8), pointer :: pfl_flx_tran_veg(:,:) ! CMS: vegetation transpiration sent to ParFlow (mm H2O/s)
+   real(r8), pointer :: pfl_psi(:,:)          ! CMS: soil matrix potential received from ParFlow (mm)
+#endif
    real(r8), pointer :: dt_veg(:)          ! change in t_veg, last iteration (Kelvin)
    real(r8), pointer :: qflx_evap_veg(:)   ! vegetation evaporation (mm H2O/s) (+ = to atm)
    real(r8), pointer :: eflx_sh_veg(:)     ! sensible heat flux from leaves (W/m**2) [+ to atm]
@@ -208,6 +220,9 @@
    real(r8), pointer :: eflx_sh_grnd(:)    ! sensible heat flux from ground (W/m**2) [+ to atm]
    real(r8), pointer :: qflx_evap_soi(:)   ! soil evaporation (mm H2O/s) (+ = to atm)
    real(r8), pointer :: fpsn(:)            ! photosynthesis (umol CO2 /m**2 /s)
+!MU (25.02.13)
+   real(r8), pointer :: fplres(:)          ! plant respiration (umol CO2 /m**2 /s)
+!MU (25.02.13)
    real(r8), pointer :: rootr(:,:)         ! effective fraction of roots in each soil layer
    real(r8), pointer :: rresis(:,:)        ! root resistance by layer (0-1)  (nlevsoi)	
 !
@@ -384,6 +399,12 @@
    z0hv           => clm3%g%l%c%p%pps%z0hv
    z0qv           => clm3%g%l%c%p%pps%z0qv
    ram1           => clm3%g%l%c%p%pps%ram1
+#ifdef COUP_OAS_COS
+   rah1           => clm3%g%l%c%p%pps%rah1 !CPS
+   raw1           => clm3%g%l%c%p%pps%raw1 !CPS
+   t_sf           => clm3%g%l%c%p%pes%t_sf !CPS
+   q_sf           => clm3%g%l%c%p%pes%q_sf !CPS
+#endif
    rssun          => clm3%g%l%c%p%pps%rssun
    rssha          => clm3%g%l%c%p%pps%rssha
    cisun          => clm3%g%l%c%p%pps%cisun
@@ -408,6 +429,10 @@
    laisun         => clm3%g%l%c%p%pps%laisun
    laisha         => clm3%g%l%c%p%pps%laisha
    qflx_tran_veg  => clm3%g%l%c%p%pwf%qflx_tran_veg
+#if defined COUP_OAS_PFL
+   pfl_flx_tran_veg  => clm3%g%l%c%p%pwf%pfl_flx_tran_veg !CMS
+   pfl_psi           => clm3%g%l%c%cps%pfl_psi
+#endif
    fwet           => clm3%g%l%c%p%pps%fwet
    h2ocan         => clm3%g%l%c%p%pws%h2ocan
    dt_veg         => clm3%g%l%c%p%pps%dt_veg
@@ -426,6 +451,9 @@
    cgrndl         => clm3%g%l%c%p%pef%cgrndl
    cgrnd          => clm3%g%l%c%p%pef%cgrnd
    fpsn           => clm3%g%l%c%p%pcf%fpsn
+!MU (25.02.13)
+   fplres         => clm3%g%l%c%p%pcf%fplres
+!MU (25.02.13)
       
    ! Assign local pointers to derived type members (ecophysiological)
 
@@ -482,8 +510,11 @@
             rootr(p,j) = 0._r8
          else
             s_node = max(vol_liq/eff_porosity,0.01_r8)
+#if defined COUP_OAS_PFL
+            smp_node = max(smpsc(ivt(p)), pfl_psi(c,j))
+#else
             smp_node = max(smpsc(ivt(p)), -sucsat(c,j)*s_node**(-bsw(c,j)))
-
+#endif
             rresis(p,j) = min( (eff_porosity/watsat(c,j))* &
                           (smp_node - smpsc(ivt(p))) / (smpso(ivt(p)) - smpsc(ivt(p))), 1._r8)
             rootr(p,j) = rootfr(p,j)*rresis(p,j)
@@ -560,6 +591,7 @@
 
    if (found) then
       write(6,*)'Error: Forcing height is below canopy height for pft index ',index
+      write(6,*)'Error:', forc_hgt_u(g), displa(p)
       call endrun()
    end if
 
@@ -616,7 +648,6 @@
          del2(p) = del(p)
 
          ! Determine aerodynamic resistances
-
          ram1(p)  = 1._r8/(ustar(p)*ustar(p)/um(p))
          rah(p,1) = 1._r8/(temp1(p)*ustar(p))
          raw(p,1) = 1._r8/(temp2(p)*ustar(p))
@@ -847,6 +878,20 @@
 
    end do ITERATION     ! End stability iteration
 
+#if defined COUP_OAS_PFL
+   !CMS: Calculation of transpiration fluxes sent to ParFlow
+   do j = 1,nlevsoi
+     do fp = 1,num_nolakep
+        p = filter_nolakep(fp)
+        if (frac_veg_nosno(p) .eq. 0) then
+              pfl_flx_tran_veg(p,j) = 0._r8
+        else 
+              pfl_flx_tran_veg(p,j) = rootr(p,j)*qflx_tran_veg(p)
+        end if
+     end do
+   end do
+   !CMS
+#endif
    fn = fnorig
    filterp(1:fn) = fporig(1:fn)
 
@@ -870,6 +915,14 @@
       eflx_sh_grnd(p) = cpair*forc_rho(g)*wtg(p)*delt
       qflx_evap_soi(p) = forc_rho(g)*wtgq(p)*delq(p)
 
+#ifdef COUP_OAS_COS
+      !CPS Update aerodynamic resistance, surface temperature and humidity
+      rah1(p)  = rah(p,1)  
+      raw1(p)  = raw(p,1) 
+      t_sf(p)  = taf(p) 
+      q_sf(p)  = qaf(p)
+      !CPS 
+#endif     
       ! 2 m height air temperature
 
       t_ref2m(p) = thm(c) + temp1(p)*dth(p)*(1._r8/temp12m(p) - 1._r8/temp1(p))
@@ -902,7 +955,16 @@
       ! total photosynthesis
 
       fpsn(p) = psnsun(p)*laisun(p) + psnsha(p)*laisha(p)
-      
+
+!MU (25.02.13)
+
+      ! total plant respiration
+
+      !MU: parameterization of plant respiration in progress, set to 0 in this version
+      fplres(p) = 0._r8
+
+!MU (25.02.13)
+
 #if (defined CN)
       ! 4/14/05: PET
       ! Adding isotope code
