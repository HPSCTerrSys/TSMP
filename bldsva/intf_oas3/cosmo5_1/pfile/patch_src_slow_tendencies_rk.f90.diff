---  src_slow_tendencies_rk.f90	2014-11-28 12:18:36.000000000 +0100
+++  src_slow_tendencies_rk.f90	2019-12-04 12:52:07.047603000 +0100
@@ -254,6 +254,9 @@
   tcm      ,    & ! turbulent diffusion coefficients for momentum   --
   tch      ,    & ! turbulent diffusion coefficients for heat       --
                   ! and moisture
+#ifdef COUP_OAS_COS
+  tcw      ,    & ! turbulent diffusion coefficients for moisture   --  !CPS
+#endif
   !   fields that are computed in the dynamics
   dqvdt    ,    & ! threedimensional moisture convergence         (  1/s)
   umfl_s   ,    & ! average u-momentum flux (surface)             ( N/m2)
@@ -366,6 +369,9 @@
   ztmkvh(:,:),          & !
   ztch(:,:),            & !
   ztcm(:,:),            & !
+#ifdef COUP_OAS_COS
+  ztcw(:,:),            & ! CPS
+#endif
   zkh(:,:,:),           & !
   ztmkvw(:,:,:),        & !
   ztmkvtke(:,:,:)         !
@@ -574,11 +580,13 @@
 !  of the code, i.e., src_soil_multlay.f90
 !!!      ztch(i,j)  = tch(i,j)*zvbke*ps(i,j,nnow)/(r_d*ztvb)
       ztch(i,j)  = tch(i,j)*MAX(zvbke,vel_min)*ps(i,j,nnow)/(r_d*ztvb)
+#ifdef COUP_OAS_COS
+      ztcw(i,j)  = tcw(i,j)*MAX(zvbke,vel_min)*ps(i,j,nnow)/(r_d*ztvb)  !CPS
+#endif
 ! UB<<
     ENDDO
   ENDDO
 
-
   ! Calculation of the modified turbulent diffusion coefficients
   ! ------------------------------------------------------------
 
@@ -1331,7 +1339,11 @@
 !CDIR ON_ADB(ze)
       DO i = istart, iend
         zgat       = - zkh (i,j,ke)*zsqrtgrho_r_s(i,j,ke)
+#ifdef COUP_OAS_COS
+        zgct       = - ztcw(i,j   )*zsqrtgrho_r_s(i,j,ke)
+#else
         zgct       = - ztch(i,j   )*zsqrtgrho_r_s(i,j,ke)
+#endif
         zag        = zgat*za1t(ke)
         zas        = zgat*za2t(ke)
         zcg        = zgct*za1t_surf
@@ -1947,9 +1959,15 @@
 
   DO j =jstart, jend
     DO i = istart , iend
+#ifdef COUP_OAS_COS
+      qvsflx(i,j)  =  - ztcw(i,j) * &
+                     ( za2t_surf*(qv_s(i,j,nnow) - qv_now(i,j,ke)) +  &
+                       za1t_surf*(qv_s(i,j,nnew) - qv_new(i,j,ke)) )
+#else
       qvsflx(i,j)  =  - ztch(i,j) * &
                      ( za2t_surf*(qv_s(i,j,nnow) - qv_now(i,j,ke)) +  &
                        za1t_surf*(qv_s(i,j,nnew) - qv_new(i,j,ke)) )
+#endif
       lhfl_s(i,j) = lh_v*qvsflx(i,j)
     ENDDO
   ENDDO
