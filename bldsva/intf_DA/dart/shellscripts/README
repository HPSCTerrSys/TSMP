#MACHINE for JURECA/JUWELS
#source $HOME/DART/lanai/mkmf/loadenvs
# Desription
# -----------
# DART source codes sits separate to TerrSysMP source codes
# Only interface codes for component model resides in both directories
# Use of git_to_dart syncs these interface codes in TerrSysMP folder to DART folder and rebuilds each component model, first step !!@
# Example
./git_to_dart.csh 
# Note, make sure NETCDF_FORTRAN points to the library compiled using 
# the compiler specified in DART/lanai/mkmf/mkmf.template !

source $HOME/shared/loadenvJUWELS.XXX  # This is important otherwise compiler spefific tcl is not loaded locally

# With any updates the codes need to be rebuilt, for component specific build

cd $DART/models/terrsysmp/cosmo/work/
./quickbuild.csh

# The current setup assumes that DART and TerrSySMP folder both sits in the $HOME directory
# 
#----------------------------------------------------------------------------------------------------
#!< AGU 2016 How to set up a synthetic test case using TerrSysMP-DART interface?
#----------------------------------------------------------------------------------------------------
# DART source codes sits separate to TerrSysMP source codes
#
# Create spinup for subsurface, make sure to change the map_fn text to include all ensembles

./hydro_spinup.csh machine

# Use the spunup initial conditions with perturbed model parameter to make an open loop experiment
# with members > ensemble number for the final experiment. The extra one will be the 'truth' in
# the perfect_model experiment.
#
# Modify the ntasks and nodes according to member numbers, this also applies to dart_cosmo.ksh
# Check map_fn

sbatch terrsysmp-dart_jobchain.ksh 1 run

# Analyze the ensemble evolution and select the member number for Perfect Model, specify it as map_fn
# for perfect model run, also create a map_fn.txt, not containing this member for creating the ensemble
# run for DA

# Use the runmanager to submit a sequential job to generate the model trajectory
# assuming a perfect model
# It uses "perfect_tsmp_setup.csh" to setup the model runs
# It also uses the restart files and perturbation based on map_fn specified in the script

sbatch jobchain_perfect.ksh 1 run

# Use the DART perfect model to harvest synthetic observations:
# This will extract the observations in DART format for the specified regions in column_mod.f90

./assim.csh 0/1 clm/cosmo/parflow

# Use the runmanager to submit a sequential job for ensemble run with DA
# For open loop run, set NRST = 0
# It uses "tsmp_slm_run.bsh" to setup the model runs
# so the user needs to modify experiment setups, ensemble numbers in the above script
# And it also uses "dart_XXX" for DA with DART

sbatch terrsysmp-dart_jobchain.ksh 1 run

# Archiving ensemble runs
archive_hist.csh
Usage: ./archive_hist.csh rundir ensemble_size

# Archiving single runs
copy.csh
Usage: ./copy.csh rundir

# Archive hydrological spinup
Usage: ./archive_hydroSpin.csh $rundir $ensemble_size

# Archive restart files from hydrological spinup
Usage: ./archive_restart_hydroSpinup.csh $ensemble_size

#----------------------------------------------------------------------------------------------------
# Utilities
#----------------------------------------------------------------------------------------------------
# Update DART source code from the TerrSysMP folder

git_to_dart.csh
Usage: ./git_to_dart.csh

# Strip filenames
filestrip.csh
Usage: ./filestrip.csh

# Perturb model parameters
perturb_model_param.csh
Usage:./perturb_model_param.csh rundir ensemble_size map_fn

# Perturb model state
perturb_model_state.csh
Usage: ./perturb_model_state.csh rundir ensemble_size map_fn

# Extract time stamp
timeFile.ksh
Usage: ./timeFile.ksh rundir

# Sequential job submission
tdart.ksh
Usage: ./tdart.ksh
