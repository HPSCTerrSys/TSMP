#!/bin/ksh
#################################################
# job settings
#################################################
INIT_D=init_d_bldsva
INIT_M=init_m_bldsva
INIT_Y=init_y_bldsva
INIT_H=init_h_bldsva
CONV_SCHEME=3
#
username_cluma=cluma
username_sx9=xxxx
nsteps=nstop_cos_bldsva
#
lmworkdir_cluma=__rundir__
lmoutdir_cluma=__rundir__/cosmo_out
lmindir_cluma=__forcingdir__/
lmrestdir_cluma=__rundir__/cosmo_rest
#lmworkdir_sx9=/e/uhome/xxxx/cosmo/
#lmoutdir_sx9=/e/gtmp/xxxx/cosmo/
#lmindir_sx9=/e/uscratch/xxxx/cosmo/
#
#################################################
# host detection
#################################################
cmd=$1
if [[ $1 = clean ]]; then
  if [[ ($HOST = lxe00) || ($HOST = lxe01) ]]; then
    cmd=cleansx9
    echo "... assuming sx9 as host"
  fi
  if [[ $HOST = m01 ]]; then
    cmd=cleancluma
    echo "... assuming cluma as host"
  fi
fi
#
if [[ $1 = exe ]]; then
  if [[ ($HOST = lxe00) || ($HOST = lxe01) ]]; then
    cmd=exesx9
    echo "... assuming sx9 as host"
  fi
  if [[ $HOST = m01 ]]; then
    cmd=execluma
    echo "... assuming cluma as host"
  fi
fi
#################################################
# host-depending settings
#################################################
#
nprocspernode=999
if [[ $cmd = execluma ]]; then
  nprocspernode=4; queue=batch; username=$username_cluma
  lmworkdir=$lmworkdir_cluma; lmoutdir=$lmoutdir_cluma; lmindir=$lmindir_cluma ; lmrestdir=$lmrestdir_cluma
  echo "###### JOB RUN ON CLUMA ######"
elif [[ $cmd = exesx9 ]]; then
  nprocspernode=16; queue=normal@sx9esiox1; username=$username_sx9
  lmworkdir=$lmworkdir_sx9; lmoutdir=$lmoutdir_sx9; lmindir=$lmindir_sx9
  echo "###### JOB RUN ON SX9 ######"
elif [[ $cmd = cleancluma ]]; then
  nprocspernode=999; queue=none
  lmworkdir=$lmworkdir_cluma; lmoutdir=$lmoutdir_cluma; lmindir=$lmindir_cluma ; lmrestdir=$lmrestdir_cluma
  echo "LMRUN_UC: clean up"
elif [[ $cmd = cleansx9 ]]; then
  nprocspernode=999; queue=none
  lmworkdir=$lmworkdir_sx9; lmoutdir=$lmoutdir_sx9; lmindir=$lmindir_sx9
  echo "LMRUN_UC: clean up"
fi
#
#################################################
# number of processors
#################################################
#
NPX=1
NPY=1
if [[ $cmd = exesx9 ]]; then
  # ON SX9 keep NPX=1 for performance reasons
  NPX=1
  NPY=$nprocspernode
fi
if [[ $cmd = execluma ]]; then
  # ON CLUMA arbitrary settings possible
  NPX=nprocx_cos_bldsva
  NPY=nprocy_cos_bldsva
fi
NPIO=0
NP1=`expr $NPX \* $NPY`; NP=`expr $NP1 + $NPIO`; N1=`expr $NP + $nprocspernode - 1`; NODES=`expr $N1 \/ $nprocspernode`
init_date=${INIT_Y}${INIT_M}${INIT_D}
#
#################################################
# define directories
#################################################
#
jobname=cosmo${INIT_D}${INIT_M}${INIT_Y}
runname=cosmo4.21agb_${INIT_D}.${INIT_M}.${INIT_Y}.${INIT_H}00_v03/
workdir=$lmworkdir/
INIDIR=$lmindir
OUTPUT=$lmoutdir
DATUM=${INIT_Y}${INIT_M}${INIT_D}${INIT_H}
RESTAR=$lmrestdir
BD_DIR=$INIDIR 
#
#################################################
# selection of actions
#################################################
#
#################################################
# display help
#################################################
#
if [[ ($cmd != execluma) && ($cmd != exesx9) && ($cmd != cleancluma) && ($cmd != cleansx9) ]]; then
  umacho
  echo "COSMORUN : Runs COSMO, cleans working and output directories (on automatically detected host)."
  echo
  echo "SYNTAX :"
  echo
  echo "lmrun_uc clean                  cleans working and output directories"
  echo
  echo "lmrun_uc exe                    starts COSMO"
  echo
  echo "lmrun_uc cleancluma, execluma   explicitly sets cluma as host"
  echo
  echo "lmrun_uc cleansx9, exesx9       explicitly sets sx9 as host"
  echo
  echo "lmrun_uc                        displays help text"
  echo
  exit
fi
#
#################################################
# generate output directory
#################################################
#
if [ ! -d $OUTPUT ] ; then
  mkdir -p $OUTPUT
fi
if [ ! -d $RESTAR ] ; then
  mkdir -p $RESTAR
fi

#
echo "VK CONFIG with DATE        ${INIT_D}.${INIT_M}.${INIT_Y} ${INIT_H}:00"
echo "VK CONFIG with CONV.SCHEME $CONV_SCHEME"
echo "VK CONFIG with INPUTDIR    $INIDIR"
echo "VK CONFIG with WORKDIR     $workdir"
echo "VK CONFIG with OUTPUTDIR   $OUTPUT"
echo "VK CONFIG with JOBNAME     $jobname"
#
#################################################
# clean up only
#################################################
#
if [[ ($cmd = cleancluma) || ($cmd = cleansx9) ]]; then
  echo "tidy up ..."
  cd $workdir
  rm -f cosmo_eu_job
  rm ftrace.out.*
  rm mon.out.*
  rm -f *~
  rm -f YU*
  rm -f INPUT_*
  rm -f ${jobname}*
  rm -f output/*
  rm -f $OUTPUT/*
  rm -f cosmo_eu_job
  rm -f M_*
  rm -f diag*
  exit 0
fi
#
#################################################
# start COSMO
#################################################
#
if [[ ($cmd = execluma) || ($cmd = exesx9) ]]; then
rm -f cosmo_eu_job
echo "generate cosmo_eu_job ..."

cat >> cosmo_eu_job << namelists
#################################################
# namelist settings
#################################################
cd $workdir
rm -f YU* M_*
#rm -f $OUTPUT/l*
#rm -f $RESTAR/l*

cat > INPUT_ORG << end_input_org
&LMGRID
startlat_tot =-21.98625,
startlon_tot =-26.98625,
pollat =39.25,
pollon=-162,
dlat=0.0275,
dlon=0.0275,
!ie_tot=904,
!je_tot=856,
ie_tot= ie_tot_bldsva,
je_tot= je_tot_bldsva, 
ke_tot=50,
/
&RUNCTL
hstart= __hstart__,
nstop= $nsteps,
ydate_ini='$DATUM',
nprocx= $NPX,
nprocy= $NPY,
nprocio = $NPIO, 
dt= dt_cos_bldsva,
nboundlines=4,
itype_calendar=2,
ncomm_type=2,
hincmxt=24,
hincmxu=24,
ldump_ascii=.FALSE.,
lphys=.TRUE.,
lreorder=.FALSE.,
ldatatypes=.FALSE.,
luse_rttov=.FALSE.,
lreproduce=.TRUE.,
ltime_barrier=.FALSE.,
lartif_data=.FALSE.,
luseobs=.FALSE.,
itype_timing=4,
leps=.FALSE.,
num_iope_percomm=0,
ldiagnos=.TRUE.,
ldebug_io=.FALSE.,
linit_fields=.FALSE.,
/
&TUNING
clc_diag=0.5,
! pat_len=,
tur_len=150,
rlam_heat=1,
rlam_mom=0,
rat_lam=1,
rat_can=1,
rat_sea=20,
c_lnd=2,
c_soil=1.5,
c_sea=1.5,
z0m_dia=0.2,
crsmin=150,
wichfakt=0,
qc0=0.0002,
qi0=0,
q_crit=1.6,
mu_rain=0.5,
rain_n0_factor=0.1,
tkhmin=0.4,
tkmmin=0.4,
v0snow=20,
entr_sc=0.0003,
/
end_input_org

cat > INPUT_SAT  << end_input_sat
 &SATCTL
 /
end_input_sat

cat > INPUT_IO  << end_input_io
 &IOCTL
  lasync_io=.FALSE., ngribout=1,
   nhour_restart=__nhour_restart_start__,__nhour_restart_stop__,__nhour_restart_incr__,
   ytunit_restart='f',
  yform_read='ncdf',

!  nincwait=30,
!  nmaxwait=2400,
 /
 &DATABASE
 /
 &GRIBIN
lbdana=.FALSE.,
lana_qi=.TRUE.,
llb_qi=.TRUE.,
llb_qg=.FALSE.,
llb_qr_qs=.FALSE.,
hincbound=3,
lchkini=.TRUE.,
lchkbd=.TRUE.,
lan_t_so0=.TRUE.,
lan_t_snow=.TRUE.,
lan_t_cl=.TRUE.,
lan_w_snow=.TRUE.,
lan_w_i=.TRUE.,
lan_w_cl=.TRUE.,
lan_w_so=.FALSE.,
lan_rho_snow=.FALSE.,
lana_qg=.FALSE.,
lana_rho_snow=.FALSE.,
lana_qr_qs=.FALSE.,
lan_vio3=.TRUE.,
lan_hmo3=.TRUE.,
lan_plcov=.TRUE.,
lan_lai=.TRUE.,
lan_rootdp=.TRUE.,
ytunitbd='d',
  ydirini    = '$INIDIR',
  ydirbd     = '$BD_DIR',
 /
 &GRIBOUT
    ncomb=__ncomb_start__,$nsteps,__dump_cos_interval__,
    lanalysis=.false.,
    lcheck=.true.,
    yform_write='ncdf',
    lwrite_const=.true.,
    l_p_filter=.true.,
    l_z_filter=.true.,
    yvarml='PS        ','P         ','PMSL      ','T_G       ',
           'QV_2M     ','RELHUM_2M ',
           'T_S       ','T_2M      ','T         ','FI',
           'U_10M     ','V_10M     ','U         ','V         ',
           'W         ','TCM       ','TCH       ',
  	   'RAIN_GSP','SNOW_GSP', 'RAIN_CON', 'SNOW_CON','PRR_CON','PRS_CON','PRR_GSP','PRS_GSP',
           'QV        ','QC        ','QI        ','QV_S',
           'QR        ','QS        ','QG        ','RELHUM    ',
           !'TKVM      ','TKVH      ','ALB_RAD   ','ASOB_S    ',
           !'ATHB_S    ','ASHFL_S   ','ALHFL_S   ','AVMFL_S   ',
           !'AUMFL_S   ','T_SO      ','W_I       ','W_SO      ',
           'TOT_PREC  ','CLCT      ','CLCH','CLCM','CLCL',
	   !'RUNOFF_S  ','RUNOFF_G  ',
           !'RAIN_GSP  ','SNOW_GSP  ','RAIN_CON  ','SNOW_CON  ',
           !'HPBL      ','CLCT_MOD  ',
! tracer output: watch number of tracer (ntracer) in INPUT_TRACER
!           'TRACER001 ','TRACER002 ',
    ydir = '$OUTPUT',
 /
&GRIBOUT
 ! Following output can be used to restart COSMO
    ncomb=0,$nsteps,60,
    lanalysis=.true.,
    lcheck=.true.,
    yform_write='ncdf',
    lwrite_const=.true.,
    l_p_filter=.true.,
    l_z_filter=.true.,
    yvarml='PS        ','P         ','PMSL      ','T_G       ',
           'FIS       ','QV_2M     ','RELHUM_2M ','QV_S      ',
           'T_S       ','T_2M      ','T         ','TD_2M     ',
           'U_10M     ','V_10M     ','U         ','V         ',
           'OMEGA     ','W         ','TCM       ','TCH       ',
           'QV        ','QC        ','QI        ',
           'QR        ','QS        ','QG        ','RELHUM    ',
           'TKVM      ','TKVH      ','ALB_RAD   ','ASOB_S    ',
           'T_SO',    'RAIN_GSP','SNOW_GSP', 'RAIN_CON', 'SNOW_CON','PRR_CON','PRS_CON','PRR_GSP','PRS_GSP',
           'TOT_PREC  ','CLCT      ','RUNOFF_S  ','RUNOFF_G  ',
           'RAIN_GSP  ','SNOW_GSP  ','RAIN_CON  ','SNOW_CON  ',
           'HSURF     ','FR_LAND   ','Z0        ','SOILTYP   ',
           'PLCOV     ','LAI       ','ROOTDP    ','VIO3      ',
           'HMO3      ','PP        ','T_SNOW    ','W_I       ',
           'W_SNOW    ','W_SO      ','FOR_E     ','FOR_D     ',
!   ydir= '$RESTAR',
!/
end_input_io

cat > INPUT_DYN << end_input_dyn
 &DYNCTL
l2tls=.TRUE.,
irunge_kutta=1,
irk_order=3,
iadv_order=5,
y_scalar_advect='BOTT2_STRANG',
betasw=0.4,
epsass=0.15,
alphaass=1,
hd_corr_trcr_bd=0,
hd_corr_trcr_in=0,
hd_dhmax=250,
hd_corr_t_bd=0,
hd_corr_t_in=0,
hd_corr_p_bd=0.75,
hd_corr_p_in=0,
hd_corr_u_bd=0.25,
hd_corr_u_in=0.25,
rlwidth=60000,
rdheight=11000,
itype_hdiff=2,
lspubc=.TRUE.,
lcond=.TRUE.,
itype_lbc_qrsg=1,
xkd=0.1,
itype_outflow_qrsg=2,
nrdtau=5,
ldyn_bbc=.FALSE.,
ldiabf_lh=.TRUE.,
itype_bbc_w=114,
itype_fast_waves=2,
l_diff_Smag=.TRUE.,
! lexpl_lbc=,
ikrylow_si=20,
lsemi_imp=.FALSE.,
itheta_adv=0,
 /
end_input_dyn

cat > INPUT_TRACER << end_input_tracer
 &TRACERCTL
      ntracer = 2,
! ltracer must have ntracer lines
!                   adv ,hdiff, turb, conv, var1, mfc , clm
      ltracer_in =   1  ,  0  ,  1  ,  1  ,  0  ,  0  ,  0 ,
                     0  ,  0  ,  0  ,  0  ,  0  ,  0  ,  0 ,
 /
end_input_tracer

cat > INPUT_PHY << end_input_phy
 &PHYCTL
lgsp=.TRUE.,
itype_gscp=4,
lrad=.TRUE.,
nradcoarse=1,
ico2_rad=8,
lradf_avg=.FALSE.,
hincrad=0.25,
lforest=.TRUE.,
ltur=.TRUE.,
ninctura=1,
lexpcor=.TRUE.,
ltmpcor=.FALSE.,
lprfcor=.FALSE.,
lnonloc=.FALSE.,
lcpfluc=.FALSE.,
limpltkediff=.TRUE.,
itype_turb=3,
imode_turb=1,
itype_tran=2,
imode_tran=1,
itype_wcld=2,
icldm_rad=4,
icldm_turb=2,
icldm_tran=0,
itype_synd=2,
nincconv=10,
itype_conv=3,
lcape=.FALSE.,
llake=.FALSE.,
lseaice=.FALSE.,
lmulti_layer=.TRUE.,
lsso=.FALSE.,
ltkesso=.FALSE.,
itype_albedo=1,
ke_soil=7,
czbot_w_so=4,
lconf_avg=.TRUE.,
lradtopo=.FALSE.,
ldiniprec=.FALSE.,
lsoil=.TRUE.,
lconv=.TRUE.,
lconv_inst=.TRUE.,
itype_heatcond=2,
 /
end_input_phy

cat > INPUT_DIA << end_input_dia
 &DIACTL
  itype_diag_gusts=4,
  n0meanval=0, nincmeanval=1,
  lgplong=.FALSE., lgpshort=.FALSE., lgpspec=.FALSE.,
  n0gp=0,      hincgp=1.0,
 /
end_input_dia

cat > INPUT_EPS << end_input_eps
 &EPSCTL
  iepsmem=0, iepstyp=55, iepstot=15,
 /
end_input_eps

cat > INPUT_ASS << end_input_ass
 &NUDGING
  lnudge  =.false.,
 /
end_input_ass

export GRIB_DEFINITION_PATH=__definitions__
export GRIB_SAMPLES_PATH=__samples__

namelists

#################################################
# finalize job script
#################################################

rm -f INPUT_ORG INPUT_IO INPUT_DYN INPUT_DIA INPUT_PHY INPUT_INI
rm -f INPUT_ASS INPUT_SAT INPUT_EPS INPUT_TRACER
#
#################################################
# submit job to queue
#################################################
#
chmod u+x cosmo_eu_job
fi
#
./cosmo_eu_job
exit 0
