#!/bin/ksh
#################################################
# job settings
#################################################
INIT_D=init_d_bldsva
INIT_M=init_m_bldsva
INIT_Y=init_y_bldsva
INIT_H=init_h_bldsva
CONV_SCHEME=3
#
username_cluma=cluma
username_sx9=xxxx
nsteps=nstop_cos_bldsva
#
lmworkdir_cluma=__rundir__
lmoutdir_cluma=__rundir__/cosmo_out
lmindir_cluma=
lmrestdir_cluma=__rundir__/cosmo_rest
#
lmworkdir_sx9=/e/uhome/xxxx/cosmo/
lmoutdir_sx9=/e/gtmp/xxxx/cosmo/
lmindir_sx9=/e/uscratch/xxxx/cosmo/
#
#################################################
# host detection
#################################################
cmd=$1
if [[ $1 = clean ]]; then
  if [[ ($HOST = lxe00) || ($HOST = lxe01) ]]; then
    cmd=cleansx9
    echo "... assuming sx9 as host"
  fi
  if [[ $HOST = m01 ]]; then
    cmd=cleancluma
    echo "... assuming cluma as host"
  fi
fi
#
if [[ $1 = exe ]]; then
  if [[ ($HOST = lxe00) || ($HOST = lxe01) ]]; then
    cmd=exesx9
    echo "... assuming sx9 as host"
  fi
  if [[ $HOST = m01 ]]; then
    cmd=execluma
    echo "... assuming cluma as host"
  fi
fi
#################################################
# host-depending settings
#################################################
#
nprocspernode=999
if [[ $cmd = execluma ]]; then
  nprocspernode=4; queue=batch; username=$username_cluma
  lmworkdir=$lmworkdir_cluma; lmoutdir=$lmoutdir_cluma; lmindir=$lmindir_cluma ; lmrestdir=$lmrestdir_cluma
  echo "###### JOB RUN ON CLUMA ######"
elif [[ $cmd = exesx9 ]]; then
  nprocspernode=16; queue=normal@sx9esiox1; username=$username_sx9
  lmworkdir=$lmworkdir_sx9; lmoutdir=$lmoutdir_sx9; lmindir=$lmindir_sx9
  echo "###### JOB RUN ON SX9 ######"
elif [[ $cmd = cleancluma ]]; then
  nprocspernode=999; queue=none
  lmworkdir=$lmworkdir_cluma; lmoutdir=$lmoutdir_cluma; lmindir=$lmindir_cluma ; lmrestdir=$lmrestdir_cluma
  echo "LMRUN_UC: clean up"
elif [[ $cmd = cleansx9 ]]; then
  nprocspernode=999; queue=none
  lmworkdir=$lmworkdir_sx9; lmoutdir=$lmoutdir_sx9; lmindir=$lmindir_sx9
  echo "LMRUN_UC: clean up"
fi
#
#################################################
# number of processors
#################################################
#
NPX=1
NPY=1
if [[ $cmd = exesx9 ]]; then
  # ON SX9 keep NPX=1 for performance reasons
  NPX=1
  NPY=$nprocspernode
fi
if [[ $cmd = execluma ]]; then
  # ON CLUMA arbitrary settings possible
  NPX=nprocx_cos_bldsva
  NPY=nprocy_cos_bldsva
fi
NPIO=0
NP1=`expr $NPX \* $NPY`; NP=`expr $NP1 + $NPIO`; N1=`expr $NP + $nprocspernode - 1`; NODES=`expr $N1 \/ $nprocspernode`
init_date=${INIT_Y}${INIT_M}${INIT_D}
#
#################################################
# define directories
#################################################
#
jobname=cosmo${INIT_D}${INIT_M}${INIT_Y}
runname=cosmo4.21agb_${INIT_D}.${INIT_M}.${INIT_Y}.${INIT_H}00_v03/
workdir=$lmworkdir/
INIDIR=$lmindir
OUTPUT=$lmoutdir
DATUM=${INIT_Y}${INIT_M}${INIT_D}${INIT_H}
RESTAR=$lmrestdir
BD_DIR=$INIDIR 
#
#################################################
# selection of actions
#################################################
#
#################################################
# display help
#################################################
#
if [[ ($cmd != execluma) && ($cmd != exesx9) && ($cmd != cleancluma) && ($cmd != cleansx9) ]]; then
  umacho
  echo "COSMORUN : Runs COSMO, cleans working and output directories (on automatically detected host)."
  echo
  echo "SYNTAX :"
  echo
  echo "lmrun_uc clean                  cleans working and output directories"
  echo
  echo "lmrun_uc exe                    starts COSMO"
  echo
  echo "lmrun_uc cleancluma, execluma   explicitly sets cluma as host"
  echo
  echo "lmrun_uc cleansx9, exesx9       explicitly sets sx9 as host"
  echo
  echo "lmrun_uc                        displays help text"
  echo
  exit
fi
#
#################################################
# generate output directory
#################################################
#
if [ ! -d $OUTPUT ] ; then
  mkdir -p $OUTPUT
fi
if [ ! -d $RESTAR ] ; then
  mkdir -p $RESTAR
fi

#
echo "VK CONFIG with DATE        ${INIT_D}.${INIT_M}.${INIT_Y} ${INIT_H}:00"
echo "VK CONFIG with CONV.SCHEME $CONV_SCHEME"
echo "VK CONFIG with INPUTDIR    $INIDIR"
echo "VK CONFIG with WORKDIR     $workdir"
echo "VK CONFIG with OUTPUTDIR   $OUTPUT"
echo "VK CONFIG with JOBNAME     $jobname"
#
#################################################
# clean up only
#################################################
#
if [[ ($cmd = cleancluma) || ($cmd = cleansx9) ]]; then
  echo "tidy up ..."
  cd $workdir
  rm -f cosmo_eu_job
  rm ftrace.out.*
  rm mon.out.*
  rm -f *~
  rm -f YU*
#  rm -f INPUT_*
  rm -f ${jobname}*
  rm -f output/*
  rm -f $OUTPUT/*
  rm -f cosmo_eu_job
  rm -f M_*
  rm -f diag*
  exit 0
fi
#
#################################################
# start COSMO
#################################################
#
if [[ ($cmd = execluma) || ($cmd = exesx9) ]]; then
rm -f cosmo_eu_job
echo "generate cosmo_eu_job ..."

cat >> cosmo_eu_job << namelists
#################################################
# namelist settings
#################################################
cd $workdir
rm -f YU* M_*
rm -f $OUTPUT/l*
#rm -f $RESTAR/l*

cat > INPUT_ORG << end_input_org
 &LMGRID
  startlat_tot = 5.0, startlon_tot = 5.,
  pollat       = 90.0,          pollon = -180.0,
  dlat         = 0.01,           dlon = 0.01,
  ie_tot       = ie_tot_bldsva, je_tot = je_tot_bldsva,     ke_tot = 40,
 /
 &RUNCTL
  hstart = __hstart__,   nstop  = $nsteps,    dt      = dt_cos_bldsva,    ydate_ini='$DATUM',
  nprocx = $NPX,  nprocy = $NPY,   nprocio = $NPIO,
  nboundlines = nbdl_cos_bldsva,
  lphys      = .TRUE.,   luse_rttov    = .FALSE.,  luseobs = .FALSE., leps = .FALSE.,
  lreorder   = .FALSE.,  lreproduce    = .TRUE.,   itype_timing = 0,
  ldatatypes = .FALSE.,  ltime_barrier = .FALSE.,  ncomm_type=3,
  idbg_level = 2, lartif_data=.TRUE., ldfi=.FALSE.,
  lperi_x=.true.,
  lperi_y=.true.,
 /
 &TUNING
  ! values from Annika Schomburg's dx=400 m runs + operational COSMO-DE values for q_crit, mu_rain, rain_n0_factor
  clc_diag  =   0.75,
  pat_len   =  70.0,
  tur_len   = 500.0,
  rlam_heat =   1.0,
  rlam_mom  =   0.0,
  rat_lam   =   1.0,
  rat_can   =   1.0,
  rat_sea   =  20.0,
  c_lnd     =   2.0,
  c_soil    =   1.0,
  c_sea     =   1.5,
  z0m_dia   =   0.2,
  crsmin    = 150.0,
  wichfakt  =   0.0,
  qc0       =   0.0002,
  q_crit    =   1.6,
  mu_rain   =   0.5,
  rain_n0_factor = 0.1,
 /
end_input_org

cat > INPUT_SAT  << end_input_sat
 &SATCTL
 /
end_input_sat

cat > INPUT_IO  << end_input_io
 &IOCTL
  lasync_io=.FALSE., ngribout=1,
  ydir_restart_out='$RESTAR',
  ydir_restart_in='$INIDIR',
   nhour_restart=__nhour_restart_start__,__nhour_restart_stop__,__nhour_restart_incr__,
   ytunit_restart='f',
  yform_read='apix',
 /
 &DATABASE
 /
 &GRIBIN
  lan_t_so0  = .TRUE., lan_t_cl  = .TRUE., lan_w_cl   = .TRUE., lan_vio3     = .TRUE.,
  lan_hmo3   = .TRUE., lan_plcov = .TRUE., lan_lai    = .TRUE., lan_rootdp   = .TRUE.,
  lan_t_snow = .TRUE., lan_w_i   = .TRUE., lan_w_snow = .TRUE., lan_rho_snow = .TRUE.,
  hincbound  = 1.0,
  lchkini    = .TRUE., lchkbd    = .TRUE., lbdana     = .FALSE.,
  lana_qi    = .TRUE., llb_qi    = .TRUE., lana_rho_snow=.TRUE., lana_qr_qs = .TRUE.,
  llb_qr_qs  = .TRUE., lana_qg   = .FALSE., llb_qg     = .FALSE.,
  ydirini    = '$INIDIR',
  ydirbd     = '$BD_DIR',
 /
 &GRIBOUT
    ncomb=__ncomb_start__,$nsteps,__dump_cos_interval__,
    lanalysis=.false.,
    lcheck=.true.,
    yform_write='ncdf',
    lwrite_const=.true.,
    l_p_filter=.true.,
    l_z_filter=.true.,
    yvarml='',
!          'PS        ','P         ','PMSL      ','T_G       ',
!           'FIS       ','QV_2M     ','RELHUM_2M ',
!           'T_S       ','T_2M      ','T         ','TD_2M     ',
!           'U_10M     ','V_10M     ','U         ','V         ',
!           'OMEGA     ','W         ','TCM       ','TCH       ',
!           'QV        ','QC        ','QI        ',
!           'QR        ','QS        ','QG        ','RELHUM    ',
!           'TKVM      ','TKVH      ','ALB_RAD   ','SOBS_RAD  ',
!           'THBS_RAD  ','SHFL_S    ','LHFL_S    ','VMFL_S    ',
!           'T_SO      ','W_I       ','W_SO      ',
!           'TOT_PREC  ','CLCT      ','RUNOFF_S  ','RUNOFF_G  ',
!           'RAIN_GSP  ','SNOW_GSP  ','RAIN_CON  ','SNOW_CON  ',
!           'HPBL      ','CLCT_MOD  ','SOBT_RAD  ','THBT_RAD  ',
!           'AER_ORG   ','AER_BC    ','AER_SS    ',
! tracer output: watch number of tracer (ntracer) in INPUT_TRACER
!           'TRACER001 ','TRACER002 ',
    ydir = '$OUTPUT',
 /
end_input_io

cat > INPUT_DYN << end_input_dyn
 &DYNCTL
    lspubc=.true.,
      itype_spubc = 1,
      rdheight=15000.,
      nrdtau=10,
    betasw=0.4,
    xkd=0.10,
    itype_outflow_qrsg = 1,
    itype_lbc_qrsg = 1,
      rlwidth=10000.0,
    lcond=.true.,
    lhordiff=.true.,
      itype_hdiff=2,
      hd_corr_u_bd = 1.00,
      hd_corr_t_bd = 0.75,
      hd_corr_trcr_bd = 0.50,
      hd_corr_p_bd = 0.75,
      hd_corr_u_in = 1.00,
      hd_corr_t_in = 0.75,
      hd_corr_trcr_in = 0.50,
      hd_corr_p_in = 0.75,
      hd_dhmax=250.0,
    lsemi_imp=.false.,
      ikrylow_si = 20,
      eps_si = 1.0E-8,
      maxit_si = 200,
      iprint_si = 0,
    l2tls=.true.,
      irunge_kutta=1,
        irk_order=3,
        iadv_order=5,
      itype_fast_waves = 2,
        lhor_pgrad_Mahrer = .false.,
        l_3D_div_damping = .false.,
      ldyn_bbc = .FALSE.,
      ltadv_limiter = .FALSE.,
      y_scalar_advect='Bott2',
      y_vert_adv_dyn='expl',
      ieva_order=3,
      ldiabf_lh=.true.,
    lw_freeslip=.true.,
    intcr_max = 1,
    lcori_deep = .FALSE.,
    ladv_deep = .FALSE.,
    lcori = .false.,
    lradlbc = .FALSE.,
      relax_fac = 0.00,
    alphaass = 1.0,
 /
end_input_dyn

cat > INPUT_TRACER << end_input_tracer
 &TRACERCTL
      ntracer = 2,
! ltracer must have ntracer lines
!                   adv ,hdiff, turb, conv, var1, mfc , clm
      ltracer_in =   1  ,  0  ,  1  ,  1  ,  0  ,  0  ,  0 ,
                     0  ,  0  ,  0  ,  0  ,  0  ,  0  ,  0 ,
 /
end_input_tracer

cat > INPUT_PHY << end_input_phy
 &PHYCTL
    lgsp=.TRUE.,
      itype_gscp=4,
    lrad=.TRUE.,
      nradcoarse=1,
      lradf_avg=.FALSE.,
      hincrad=0.25,
!      nincrad=1,
      lforest=.TRUE.,
    ltur=.TRUE.,
      ninctura=1,
      lexpcor=.TRUE.,
      ltmpcor=.FALSE.,
      lprfcor=.FALSE.,
      lnonloc=.FALSE.,
      lcpfluc=.FALSE.,
      limpltkediff=.TRUE.,
      itype_turb=3,
      imode_turb=1,
      itype_tran=2,
      imode_tran=1,
      itype_wcld=2,
      icldm_rad =4,
      icldm_turb=2,
      icldm_tran=0,
      itype_synd=2,
    lsoil=.TRUE.,
      itype_evsl=2,
      itype_trvg=2,
      lmulti_layer=.TRUE.,
      lmelt=.TRUE.,
      lmelt_var=.TRUE.,
      ke_soil = 7,
      czml_soil = 0.005, 0.02, 0.06, 0.18, 0.54, 1.62, 4.86, 14.58,
    lconv=.TRUE.,
      nincconv=10,
      itype_conv=$CONV_SCHEME,
      lcape=.FALSE.,
!   lsso=.FALSE.,
!     ltkesso=.TRUE.,
 /
end_input_phy

cat > INPUT_DIA << end_input_dia
 &DIACTL
  itype_diag_gusts=4,
  n0meanval=0, nincmeanval=1,
  lgplong=.FALSE., lgpshort=.FALSE., lgpspec=.FALSE.,
  n0gp=0,      hincgp=1.0,
 /
end_input_dia

cat > INPUT_EPS << end_input_eps
 &EPSCTL
  iepsmem=0, iepstyp=55, iepstot=15,
 /
end_input_eps

cat > INPUT_ASS << end_input_ass
 &NUDGING
  lnudge  =.false.,
 /
end_input_ass

cat > INPUT_IDEAL << end_input_artifctl
 &ARTIFCTL
    ldebug_artif = .true., 
      idbg_artif_level = 5
    irefatm = 2,
      p0sl = 1e5,       ! reference surface (z = 0.0 m) pressure [Pa]
      t0sl = 300.0,     ! reference surface temperature [K]
      dt0lp = 42.0,     ! logarithmic temperature gradient [K]
      delta_t = 75.0,   ! temperature diff. surface - stratosphere [K]
      h_scal = 10000.0, ! e-folding height of exponential adjustment to the stratosphere temp. [m]
      bvref = 0.01,     ! constant Brund-Vaisala-frequency for irefatm=3 [1/s]
    ivctype=2,
      zspacing_type = 'predefined',! sub-type of coordinate spec.
      exp_galchen = 2.6,        ! exponent in the Gal-Chen formula
      vcflat = 11000.0,         ! height, above which coordinate levels become flat [m]
      zz_top = 23000.0,         ! height of model top, if it has to be specified explicitly [m]
    linit_realoro=.false.,
    href_oro=0.0,
    itype_topo = 0,
    lnosurffluxes_m = .false.,   !tcm=0, true, free-slipe BC
    lnosurffluxes_h = .false.,   !tch=0, true
    itype_soil_c = 1, 
      z0_c      = 0.01,        ! z_0 in m
      fr_land_c = 1.0,         ! land fraction, dimensionless
      soiltyp_c = 3.0,         ! soiltype, dimensionless
      plcov_c   = 0.6,         ! plant cover, dimensionless
      lai_c     = 3.0,         ! LAI, dimensionless
      rootdp_c  = 0.7,         ! root depth in m
      for_e_c   = 0.2,         ! area fraction of evergreen forests
      for_d_c   = 0.2,         ! area fraction of decidious forests
      h_ice_c   = 0.1,         ! ice thickness in m
      t_ice_c   = 270.0,       ! T at the snow-ice or air-ice interf. in K
   itype_soil_tw = 1, 
      t_soil_c  = -1.0,     ! t_soil in K (if <0, t_s is taken instead)
      wf_soil_c = 0.3,      ! soil water saturation, dimensionless (0 ... 1)
      t_snow_c  = -1.0,     ! t_snow in K (if <0, t_s is taken instead)
      w_snow_c  = 0.0,      ! snow water equivalent in m H2O
      w_i_c     = 0.0,      ! interception storage on plants in m H2O
   itype_artifprofiles = 2,
   itype_anaprof_tqv = 2,
   itype_anaprof_uv = 3,
     nlayers_poly = 4,
     p_base_poly = 1e5,
     h_poly = 0.0,1500.0,5000.0,13000.0,
     t_poly = 300.0, 292.5, 275.0, 235.0,
     tgr_poly = 5.0e-3, 5.0e-3,5.0e-3,-1.0e-4, 
     rh_poly = 0.5, 0.5,0.1,2.0e-2,
     rhgr_poly = 0.0, 1.15e-4, 1.0e-5,0.0,

     u_infty = 0.5,
/
end_input_artifctl

namelists

#################################################
# finalize job script
#################################################

rm -f INPUT_ORG INPUT_IO INPUT_DYN INPUT_DIA INPUT_PHY INPUT_INI
rm -f INPUT_ASS INPUT_SAT INPUT_EPS INPUT_TRACER
#
#################################################
# submit job to queue
#################################################
#
chmod u+x cosmo_eu_job
fi
#
./cosmo_eu_job
exit 0
